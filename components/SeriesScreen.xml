<?xml version="1.0" encoding="UTF-8"?>

<component name="SeriesScreen" extends="Group" initialFocus="list">

    <interface>
        <field id = "obj" type = "assocarray" onChange="objSet" />
    </interface>

    <script type="text/brightscript">
        <![CDATA[
            Sub init()
                m.top.setFocus(true)
                m.list = m.top.findNode("list")
                m.poster = m.top.findNode("poster")
                m.group = m.top.findNode("group")
                m.labelTitle = m.top.findNode("labelTitle")
                m.labelEntries = m.top.findNode("labelEntries")
                m.list.content = createObject("RoSGNode", "ContentNode")
                ' Download offset
                m.offset = 0
                ' Downloaded seasons to be displayed
                m.seasons = []

                m.list.ObserveField("itemSelected", "listItemSelected")
            End Sub

            sub listItemSelected()
                print "Item Selected"
                selectedItem = m.list.itemSelected
                print "-- selected item "; selectedItem

                if (selectedItem >= 0) and (selectedItem < m.seasons.Count())
                    m.list.visible = false
                    m.group.visible = false

                    obj = m.seasons.GetEntry(selectedItem)
                    print obj.type
                    m.CurrentScreen = CreateObject("RoSGNode", "SeasonScreen")
                    m.CurrentScreen.obj = obj

                    m.CurrentScreen.id = "CURRENT_TEST"
                    m.top.AppendChild(m.CurrentScreen)
                    m.CurrentScreen.SetFocus(true)
                end if
            end sub

            function onKeyEvent(key as String, press as Boolean) as Boolean
                print "in testList.xml onKeyEvent ";key;" "; press
                if press then
                    if key = "back"
                    if not (m.CurrentScreen = invalid)
                        print "CLEANING UP m.CurrentScreen"
                        m.top.RemoveChild(m.CurrentScreen)
                        m.CurrentScreen = invalid

                        m.list.visible = true
                        m.group.visible = true
                        m.list.SetFocus(true)

                        return true
                    end if
                    else if key = "home"
                        m.top.RemoveChild(m.CurrentScreen)
                        m.CurrentScreen = invalid
                    end if
                end if
                return false
            end function

            Sub objSet()
                print "Obj set"
                if m.top.obj.type = "ProgramCard"
                    m.poster.uri = m.top.obj.PrimaryImageUri
                    m.labelTitle.text = m.top.obj.SeriesTitle
                    loadSeriesData()
                else
                    print "Wrong type: " + obj.type
                end if
            end Sub

            Sub loadSeriesData()
                m.FetcherTask = createObject("roSGNode", "FetcherTask")
                m.FetcherTask.url = "https://www.dr.dk/mu-online/api/1.4/list/view/seasons?id=" + m.top.obj.SeriesSlug + "&limit=20&offset=" + m.offset.ToStr()
                m.FetcherTask.observeField("result", "seriesDataLoaded")
                m.FetcherTask.control = "RUN"
            end Sub

            Sub seriesDataLoaded()
                ? m.FetcherTask.result.Items
                m.seasons.append(m.FetcherTask.result.Items)

                m.offset += m.FetcherTask.result.Items.count()
                print "Offset: " ; m.offset
                if m.offset < m.FetcherTask.result.TotalSize
                    print "Load more"
                    loadSeriesData()
                else
                    print "Nothing left to load"
                    m.labelEntries.text = "Sæsoner: " + m.seasons.Count().ToStr()
                    m.seasons.SortBy("SeasonNumber", "r")
                    for each item in m.seasons
                        node = m.list.content.createChild("ContentNode")
                        if item.DoesExist("SeasonNumber")
                            node.title = "Sæson " + item.SeasonNumber.ToStr()
                        else
                            node.title = item.Title
                        end if
                    end for
                end if
            end Sub
        ]]>
    </script>
    <children>
        <LayoutGroup
            id="group"
            translation="[0, 64]"
            width="1920"
            layoutDirection="horiz"
            itemSpacings="[320, 32]"
            addItemSpacingAfterChild="false"
            >
            <Poster
                id="poster"
                width="640"
                height="360"
                loadDisplayMode="scaleToZoom"
                />
            <LayoutGroup
                layoutDirection="vert"
                translation="[32,32]"
                itemSpacings="[12]"
                addItemSpacingAfterChild="true"
                >
                <Label
                    id="labelTitle"
                    font="font:LargeSystemFont"
                    />
                <Label
                    id="labelEntries"
                    />
            </LayoutGroup>
        </LayoutGroup>
        <LabelList 
            id="list"
            translation="[100, 488]"
            itemSize="[800, 72]"
            itemSpacing="[15, 15]"
            focusRow="0" >
        </LabelList>
    </children>
</component>
